// Code generated by go-bindata.
// sources:
// static/javascript/#sfomuseum.geotag.init.js#
// static/javascript/catalog.js
// static/javascript/sfomuseum.geotag.init.js
// static/javascript/sfomuseum.maps.js
// DO NOT EDIT!

package www

import (
	"github.com/whosonfirst/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticJavascriptSfomuseumGeotagInitJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x51\x8f\xa3\x36\x10\x7e\x26\xbf\x62\xca\x13\x91\x08\xa9\xae\xba\x87\xcb\x8a\x4a\x7b\xb7\x9c\xba\xbd\xdd\xcd\x29\xbb\xd7\x53\x9f\x22\x07\x26\xac\x1b\x63\x53\xdb\x80\xa2\x53\xfe\x7b\x65\x0f\x24\x21\x9b\x4a\x6d\x1e\x02\x1e\x86\x6f\x3e\xcf\x7c\x9f\xe9\xb8\x2c\x54\x97\xb0\xa2\xc8\x5a\x94\xf6\x81\x1b\x8b\x12\x75\x14\x0a\xc5\x8a\x30\x86\x6d\x23\x73\xcb\x95\x04\xb7\x8e\xd0\xe5\x4c\x7f\x4c\x26\x00\x00\x2d\xd3\x50\xb1\x1a\x52\x28\x51\x59\x56\x26\x15\xab\x4d\x52\xa2\x7d\x64\xf5\xc7\xfd\x7d\x11\x85\x15\xab\xc3\xe9\x0d\x65\xf3\x2d\x44\x3f\xb9\xfc\xe9\x8f\x49\x90\x2b\x69\x94\xc0\x44\xa8\x32\x0a\x3f\x33\x2e\xb0\x00\xab\x40\xa3\xd5\x1c\x5b\x84\xfe\xc5\x40\xa3\x6d\xb4\xbc\xf1\x00\x07\xff\x7f\xac\x2c\xd8\x1e\xb5\x59\xe7\x4a\x5a\xad\x04\xa4\x20\xb1\x83\x87\xe4\x13\xad\x93\x07\xff\x38\x72\xb5\x98\x65\x42\x95\x0b\x30\x5b\x55\x35\x06\x9b\x8a\x88\xf6\xf1\x98\xc0\x07\x9a\x15\xab\x5d\x33\x7a\x98\x68\x5c\x65\x48\x9a\xcf\xe1\xd5\xda\xda\x2c\xe6\x73\x63\x59\xbe\x53\x2d\xea\xad\x50\x5d\x92\xab\x6a\xfe\x77\x83\xc6\x75\xcc\xcc\xdf\xff\xfc\xee\xdd\x87\x0f\xbf\xbc\x9f\x77\xbb\x0e\x37\x2d\xc7\x6e\x56\xa2\x9d\xfd\xc5\x5a\x66\x72\xcd\x6b\x3b\x43\xad\x95\x36\x04\xda\x4f\x42\x49\x1f\x84\x14\xa2\xca\x94\x31\x34\x5a\xc4\x20\xb8\xc4\x18\x72\x25\x9a\x4a\xc6\xe0\x13\xa6\x90\xfe\x0a\x7d\x2b\x2d\x54\x68\x0c\x2b\x11\x52\x17\xf2\xfb\xa0\xc0\x02\x1c\x08\x85\x1a\x2d\x16\x1e\x8e\x96\x0e\x73\x41\xc8\x14\x20\xf8\xc5\x50\x86\x82\xbe\xd6\x02\x7e\x7f\x5e\x3e\x25\xc6\x6a\x2e\x4b\xbe\xdd\x47\xc4\x60\x12\x1c\x26\xc1\x24\x70\x93\xed\xc9\x77\xb8\xd9\x71\x3b\x1d\x48\x8c\xa2\x49\x4f\xe9\x37\x26\x0b\x81\xda\x24\x1e\x24\xa9\x95\xb1\x8f\xf4\x24\xea\x33\xdc\xe4\x0f\x80\xc2\xe0\x00\x34\xd2\x4b\xe6\x29\x85\x31\x9c\xa7\xd3\x14\x6f\x4e\xca\x34\xac\x75\xed\x28\x54\xde\x54\x28\xad\xd3\x65\x26\xd0\xdd\x92\x36\x3b\xcd\x2d\xea\x99\x4b\x1b\x69\xd4\x05\x9c\xc2\x03\x77\x93\x28\x99\x0b\x9e\xef\x20\x3d\x1a\x21\xa2\xa7\x43\x99\x9c\x55\xa8\xd9\xc9\x03\xb4\x76\xd5\x3e\xf9\xbb\xc8\xb1\x3b\x0a\x77\xf8\x91\x19\x28\xd7\xf9\x61\x6c\x88\x6f\x92\x6d\x04\x8e\x0c\x41\xa9\xde\x13\xbd\x29\x60\xcb\x84\xc1\x1e\xfc\x70\xa5\x86\x63\xd7\x68\x7e\xde\x83\x8d\x2a\xf6\x8e\xda\xad\xb5\x9a\x6f\x1a\x8b\x51\x58\x30\xcb\x66\xc4\x7d\xd6\x68\x1e\x3a\xc1\xf1\x23\xe7\xe0\x44\xd6\x85\xdf\x30\x7d\xe4\xc6\x70\x59\xc2\x05\x0a\xb0\xa1\xc0\xff\x66\xbc\x55\x2d\xa4\x70\xea\xe2\x67\x8e\xa2\x58\x6e\xff\xe0\xd8\x45\x63\x5a\x2e\x5b\xc9\xb5\x69\xf2\x1c\x8d\x39\x9f\x90\x36\xfe\x90\x09\x2e\xd9\x7e\x5f\xdd\xbf\x64\xb0\xfc\x72\xfb\x67\x18\x83\x4b\xba\x99\x4c\x82\xc0\xe1\x74\xbb\x75\xef\xd0\xff\xd2\x2e\xf4\xf3\x99\x75\xbb\x59\xff\x52\x48\x48\xde\x08\x67\x48\x29\x84\x56\x37\x18\x7a\xc1\xbc\xd5\xf1\xf7\xec\xe3\x97\xfb\x17\xb8\x7f\x81\x6f\x5f\x93\x24\xa1\x56\xd1\xfe\xfc\xc5\xea\xbd\xd3\x3f\x31\x74\x5c\x20\xbd\xf4\x21\x6d\x22\xf0\x5b\x1d\x36\xa2\x8d\x3b\x92\xff\xc5\x73\x75\xb3\x11\xdc\xbc\xde\x31\xcb\x46\xce\x73\xf0\x84\x74\x8d\xe2\x2a\x7b\xfe\xba\x7c\x7a\xce\xc2\xb8\x2f\x70\xa4\x7a\x80\x9c\xd9\xfc\x35\xc2\x29\x51\x1d\xbd\xfd\x7c\x7b\x17\xc6\x80\xa7\xe4\xab\x6d\xb8\x5b\x3e\x65\xb4\xf7\x83\x9f\x59\x6f\xe4\xeb\xf2\x50\x72\x3d\x1c\x8f\x27\x43\x6a\xfd\x56\x99\x34\xeb\x6c\xb5\x5a\xae\x42\x7f\x62\x0e\xe2\xb9\x0a\xdd\x9b\x97\xce\x04\xba\xac\x29\x16\x35\x9a\xc7\x4e\x95\xf1\x99\xd8\xe2\x23\x8f\x01\xf5\x42\xe1\x87\xd1\x27\xcb\x7d\x5c\xfe\x09\x00\x00\xff\xff\x4b\x8e\xea\xd0\x68\x07\x00\x00")

func staticJavascriptSfomuseumGeotagInitJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptSfomuseumGeotagInitJs,
		"static/javascript/#sfomuseum.geotag.init.js#",
	)
}

func staticJavascriptSfomuseumGeotagInitJs() (*asset, error) {
	bytes, err := staticJavascriptSfomuseumGeotagInitJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/#sfomuseum.geotag.init.js#", size: 1896, mode: os.FileMode(420), modTime: time.Unix(1589405817, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptCatalogJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x97\xe1\x6a\x83\x30\x14\x85\x5f\x45\xf2\xbb\xab\xb9\x51\x63\xd2\x57\x19\x63\xd8\xce\x76\x82\xd6\x62\x2a\x74\x15\xdf\x7d\xb8\xc1\xa0\xb7\x83\xc8\x21\xf9\x69\xa1\xf1\xe3\xe4\xc4\xef\xe6\x75\x12\xe3\xd0\x8a\x5d\x22\x3e\xaf\xd7\x8b\xdb\xa5\x69\xd7\xb4\xad\x3b\x36\x75\xfb\xb1\x75\xc7\xbe\x1b\x5d\x3d\x76\xdb\x7e\x38\xa5\x55\x3d\x34\x55\x9b\x92\xcd\xca\x74\xba\xcf\xe9\x74\x9b\xd3\xe9\xe5\x6b\xde\x5e\xce\x27\xb1\x49\x84\xeb\xc7\xe1\x50\x2f\x4b\xb9\x63\x7f\x6a\xdc\xf2\x5b\xd7\x9c\xdf\xef\x7d\xdf\x89\x5d\x42\x6a\x79\xae\x6e\x7f\xcf\xe5\x26\x11\x6d\xb5\xaf\x7f\xde\xbe\xac\x2a\xe6\x4d\x02\xe0\xe4\xe4\xc1\x19\x0f\x6e\xdf\x36\x7b\xce\x93\x31\x1e\xf3\xc8\x93\x13\xca\x93\x05\x89\xa7\x60\x38\x19\x8a\xa3\xb1\x78\x88\xf1\x68\xc6\xa3\x51\x1e\xac\x3d\x1c\x87\xc7\x03\xb7\xc7\xfa\x71\x7e\xff\xe7\x23\xca\x19\x91\x05\x89\x0a\x19\xa3\x3f\x85\x44\x71\xe2\xf4\xa7\x40\xfb\xa3\xc3\xc4\xc3\x70\x34\x1a\x8f\x2e\xb0\x78\x3c\x5f\x43\x5d\x80\x3c\xe5\x8a\x78\xd6\xf5\x99\x15\xa8\x44\x13\x2a\x55\x2c\x22\x85\x12\x99\x18\x02\x2b\x0d\x88\x63\xc2\x34\x9a\xe1\x18\x74\xbf\x8c\xcf\xa7\x18\x0e\xaa\x53\xe3\x3b\x60\xff\xe3\x78\xec\x6e\xd0\xf3\x65\xa2\x74\xc7\xc0\xdd\x59\xa1\x2f\x00\x07\x75\x97\x8d\x32\x1a\x5a\x54\xee\x36\xca\x66\x59\x74\xb3\x2c\x3c\x6b\x78\xe4\x6e\xb1\xfd\x52\x52\x46\xf8\xf4\x2c\xab\xa2\x38\x2b\x54\xb1\x62\x36\xd4\x0c\x07\xf3\x84\x92\x32\x8f\x92\x4e\x8e\xe2\xf8\x26\xb1\xd5\x22\xe5\x01\x61\xb3\x98\x92\x14\xa6\x3e\xf6\x11\x87\xd0\xfa\x10\x56\x1f\x1f\x0e\x5a\x1f\x0a\x73\x11\x64\xf5\x21\xec\x22\xa8\x24\x45\x69\x33\xa1\x6d\x26\xcc\xeb\x0c\x47\x49\x86\x83\x79\x5d\x49\x5a\x71\xb8\x00\x1c\xf8\x64\x05\x11\xe9\x13\x0e\x26\x52\x25\x29\x88\x48\x9f\x70\x30\x91\x2a\x49\x41\xa6\x9e\x27\x1c\x2b\xe6\xb7\xef\x00\x00\x00\xff\xff\x60\x62\xc6\x68\x11\x13\x00\x00")

func staticJavascriptCatalogJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptCatalogJs,
		"static/javascript/catalog.js",
	)
}

func staticJavascriptCatalogJs() (*asset, error) {
	bytes, err := staticJavascriptCatalogJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/catalog.js", size: 4881, mode: os.FileMode(420), modTime: time.Unix(1586907702, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptSfomuseumGeotagInitJs2 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x51\x8f\xa3\x36\x10\x7e\x26\xbf\x62\xca\x13\x91\x08\xa9\xae\xba\x87\xcb\x8a\x4a\x7b\xb7\x9c\xba\xbd\xdd\xcd\x29\xbb\xd7\x53\x9f\x22\x07\x26\xac\x1b\x63\x53\xdb\x80\xa2\x53\xfe\x7b\x65\x0f\x24\x21\x9b\x4a\x6d\x1e\x02\x1e\x86\x6f\x3e\xcf\x7c\x9f\xe9\xb8\x2c\x54\x97\xb0\xa2\xc8\x5a\x94\xf6\x81\x1b\x8b\x12\x75\x14\x0a\xc5\x8a\x30\x86\x6d\x23\x73\xcb\x95\x04\xb7\x8e\xd0\xe5\x4c\x7f\x4c\x26\x00\x00\x2d\xd3\x50\xb1\x1a\x52\x28\x51\x59\x56\x26\x15\xab\x4d\x52\xa2\x7d\x64\xf5\xc7\xfd\x7d\x11\x85\x15\xab\xc3\xe9\x0d\x65\xf3\x2d\x44\x3f\xb9\xfc\xe9\x8f\x49\x90\x2b\x69\x94\xc0\x44\xa8\x32\x0a\x3f\x33\x2e\xb0\x00\xab\x40\xa3\xd5\x1c\x5b\x84\xfe\xc5\x40\xa3\x6d\xb4\xbc\xf1\x00\x07\xff\x7f\xac\x2c\xd8\x1e\xb5\x59\xe7\x4a\x5a\xad\x04\xa4\x20\xb1\x83\x87\xe4\x13\xad\x93\x07\xff\x38\x72\xb5\x98\x65\x42\x95\x0b\x30\x5b\x55\x35\x06\x9b\x8a\x88\xf6\xf1\x98\xc0\x07\x9a\x15\xab\x5d\x33\x7a\x98\x68\x5c\x65\x48\x9a\xcf\xe1\xd5\xda\xda\x2c\xe6\x73\x63\x59\xbe\x53\x2d\xea\xad\x50\x5d\x92\xab\x6a\xfe\x77\x83\xc6\x75\xcc\xcc\xdf\xff\xfc\xee\xdd\x87\x0f\xbf\xbc\x9f\x77\xbb\x0e\x37\x2d\xc7\x6e\x56\xa2\x9d\xfd\xc5\x5a\x66\x72\xcd\x6b\x3b\x43\xad\x95\x36\x04\xda\x4f\x42\x49\x1f\x84\x14\xa2\xca\x94\x31\x34\x5a\xc4\x20\xb8\xc4\x18\x72\x25\x9a\x4a\xc6\xe0\x13\xa6\x90\xfe\x0a\x7d\x2b\x2d\x54\x68\x0c\x2b\x11\x52\x17\xf2\xfb\xa0\xc0\x02\x1c\x08\x85\x1a\x2d\x16\x1e\x8e\x96\x0e\x73\x41\xc8\x14\x20\xf8\xc5\x50\x86\x82\xbe\xd6\x02\x7e\x7f\x5e\x3e\x25\xc6\x6a\x2e\x4b\xbe\xdd\x47\xc4\x60\x12\x1c\x26\xc1\x24\x70\x93\xed\xc9\x77\xb8\xd9\x71\x3b\x1d\x48\x8c\xa2\x49\x4f\xe9\x37\x26\x0b\x81\xda\x24\x1e\x24\xa9\x95\xb1\x8f\xf4\x24\xea\x33\xdc\xe4\x0f\x80\xc2\xe0\x00\x34\xd2\x4b\xe6\x29\x85\x31\x9c\xa7\xd3\x14\x6f\x4e\xca\x34\xac\x75\xed\x28\x54\xde\x54\x28\xad\xd3\x65\x26\xd0\xdd\x92\x36\x3b\xcd\x2d\xea\x99\x4b\x1b\x69\xd4\x05\x9c\xc2\x03\x77\x93\x28\x99\x0b\x9e\xef\x20\x3d\x1a\x21\xa2\xa7\x43\x99\x9c\x55\xa8\xd9\xc9\x03\xb4\x76\xd5\x3e\xf9\xbb\xc8\xb1\x3b\x0a\x77\xf8\x91\x19\x28\xd7\xf9\x61\x6c\x88\x6f\x92\x6d\x04\x8e\x0c\x41\xa9\xde\x13\xbd\x29\x60\xcb\x84\xc1\x1e\xfc\x70\xa5\x86\x63\xd7\x68\x7e\xde\x83\x8d\x2a\xf6\x8e\xda\xad\xb5\x9a\x6f\x1a\x8b\x51\x58\x30\xcb\x66\xc4\x7d\xd6\x68\x1e\x3a\xc1\xf1\x23\xe7\xe0\x44\xd6\x85\xdf\x30\x7d\xe4\xc6\x70\x59\xc2\x05\x0a\xb0\xa1\xc0\xff\x66\xbc\x55\x2d\xa4\x70\xea\xe2\x67\x8e\xa2\x58\x6e\xff\xe0\xd8\x45\x63\x5a\x2e\x5b\xc9\xb5\x69\xf2\x1c\x8d\x39\x9f\x90\x36\xfe\x90\x09\x2e\xd9\x7e\x5f\xdd\xbf\x64\xb0\xfc\x72\xfb\x67\x18\x83\x4b\xba\x99\x4c\x82\xc0\xe1\x74\xbb\x75\xef\xd0\xff\xd2\x2e\xf4\xf3\x99\x75\xbb\x59\xff\x52\x48\x48\xde\x08\x67\x48\x29\x84\x56\x37\x18\x7a\xc1\xbc\xd5\xf1\xf7\xec\xe3\x97\xfb\x17\xb8\x7f\x81\x6f\x5f\x93\x24\xa1\x56\xd1\xfe\xfc\xc5\xea\xbd\xd3\x3f\x31\x74\x5c\x20\xbd\xf4\x21\x6d\x22\x38\x6e\x42\x1b\x77\x1c\xff\x8b\xdf\xea\x66\x23\xb8\x79\xbd\x63\x96\x8d\x5c\xe7\xa0\x09\xe5\x1a\xbd\x55\xf6\xfc\x75\xf9\xf4\x9c\x85\x71\x5f\xe0\x48\xf3\x00\x39\xb3\xf9\x6b\x84\x53\xa2\x39\x7a\xfb\xf9\xf6\x2e\x8c\x01\x4f\xc9\x57\x5b\x70\xb7\x7c\xca\x68\xdf\x07\x3f\xaf\xde\xc4\xd7\xa5\xa1\xe4\x7a\x38\x1a\x4f\x66\xd4\xfa\xad\x2a\x69\xce\xd9\x6a\xb5\x5c\x85\xfe\xb4\x1c\x84\x73\x15\xba\x37\x2e\x9d\x07\x74\x59\x53\x2c\x6a\x34\x8f\x9d\x22\xe3\x33\xa1\xc5\x47\x1e\x03\xea\x85\xba\x0f\xa3\xcf\x95\xfb\xb0\xfc\x13\x00\x00\xff\xff\x79\x5a\x57\x02\x64\x07\x00\x00")

func staticJavascriptSfomuseumGeotagInitJs2Bytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptSfomuseumGeotagInitJs2,
		"static/javascript/sfomuseum.geotag.init.js",
	)
}

func staticJavascriptSfomuseumGeotagInitJs2() (*asset, error) {
	bytes, err := staticJavascriptSfomuseumGeotagInitJs2Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/sfomuseum.geotag.init.js", size: 1892, mode: os.FileMode(420), modTime: time.Unix(1589405710, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptSfomuseumMapsJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x98\xef\x8a\xa3\x30\x14\xc5\x3f\xaf\x4f\x11\xf2\xa9\x85\x6e\x4d\x52\xff\x24\x2d\x7d\x92\x65\x59\x6c\x57\xbb\x42\xd4\x62\x74\x99\x1d\xc7\x77\x5f\xb4\x30\xbb\x93\x0e\x44\x0e\xe6\x53\x6b\xa0\xb7\x3f\xce\x3d\xd7\x73\xf5\x77\xd6\x12\x53\x34\x55\x6f\xf2\xbe\x22\xe7\xff\xbe\xbf\xbd\x91\x61\x3c\x05\xc1\xfb\xc9\xbe\xca\xee\x86\x9c\xc9\xa6\xe8\xeb\x6b\x57\x36\xf5\x66\x3b\x04\x01\x21\x84\xcc\x45\x72\x5d\x90\x33\x19\x82\xe0\xcb\x35\xeb\x32\xdd\xdc\x8e\xe4\xdb\x40\xfb\x56\xd3\x23\xa1\xbf\xba\xee\x6e\x8e\x61\x58\x95\x5a\x9b\xa2\xcc\xf5\xcf\xfd\xbf\xba\x4d\x7b\x0b\xb3\xbc\x2d\x33\x1d\x72\x75\x48\xc3\xe1\x75\x0c\x87\x97\x31\x1c\xbe\xfe\x19\xf7\xf7\xfa\x46\x77\x84\x9a\xa6\x6f\xaf\xf9\x54\xca\x14\xcd\xad\x34\xd3\x59\x55\xd6\x3f\x5e\x9b\xa6\xa2\x47\xc2\xc5\x74\x9d\xbd\xbc\x5f\xa7\x3b\x42\x75\x76\xc9\xe7\x7f\x9f\xaa\xd2\x71\x47\x00\x9c\x88\x3b\x70\xfa\xab\xb9\xe8\xf2\x62\xf3\x1c\x2c\x1e\xf9\x91\x27\xe2\x28\xcf\x61\x15\x79\x62\x0b\xe7\x80\xe2\x24\x98\x3c\xdc\xe2\x49\x2c\x9e\x04\xe5\xc1\xdc\x63\xe3\xd8\xf2\xc0\xee\x51\x6e\x9c\xc7\xef\x5c\x44\x91\x45\xa4\x40\xa2\x98\xf9\xf0\x4f\xcc\x50\x1c\x3f\xfe\x89\x51\xff\x24\xeb\xc8\x63\xe1\x24\xa8\x3c\x49\x8c\xc9\xe3\xb8\x1b\x26\x31\xc8\x93\x2e\x90\x67\x99\x9f\x2d\x03\xa5\xa8\x42\xa9\xf0\x45\x24\x50\x22\xe9\x23\xc0\x52\x09\xe2\xc8\x75\x1c\x6d\xe1\x48\xb4\x5f\xd2\x95\xa7\x18\x0e\x1a\xa7\xd2\x35\x60\x9f\xe3\x38\xd2\x5d\xa2\xf3\x25\xbd\x78\x47\xc2\xde\x59\x10\x5f\x00\x0e\x9a\x5d\xca\xcb\x6a\xa8\xd0\x70\x57\x5e\x9a\xa5\xd0\x66\x29\x78\xd7\x70\x84\xbb\xc2\xfa\x25\x18\xf3\x70\xeb\x99\xaa\xa2\x38\x0b\xa2\x62\xc1\x6e\x98\x58\x38\x58\x4e\x08\xc6\x22\x2f\xea\x44\x28\x8e\x6b\x13\x5b\x1c\xa4\xb6\x40\xd8\x2e\x26\x18\x5f\xc7\x3e\xea\x23\x0e\x47\xed\xc3\x31\xfb\xb8\x70\x50\xfb\xf0\x75\x1e\x04\x2d\xfb\x70\xec\x41\x50\x30\xee\xc5\xcd\x1c\x75\x33\xc7\x72\xdd\xc2\x11\xcc\xc2\xc1\x72\x5d\x30\xbe\x60\xb8\x00\x1c\x78\xb2\x56\x09\xd2\x27\x1c\x2c\x48\x05\xe3\xab\x04\xe9\x13\x0e\x16\xa4\x82\xf1\x55\xb6\x9e\x27\x1c\x45\xc7\xef\xbb\xc7\xfb\xb2\xf1\xf4\xf8\x6c\xf3\xae\x6f\xeb\xf9\xd5\xd9\x69\x3e\x08\xc6\xed\x66\x7b\x0a\xfe\x06\x00\x00\xff\xff\xc2\xcd\x22\xa5\x95\x13\x00\x00")

func staticJavascriptSfomuseumMapsJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptSfomuseumMapsJs,
		"static/javascript/sfomuseum.maps.js",
	)
}

func staticJavascriptSfomuseumMapsJs() (*asset, error) {
	bytes, err := staticJavascriptSfomuseumMapsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/sfomuseum.maps.js", size: 5013, mode: os.FileMode(420), modTime: time.Unix(1586907702, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/javascript/#sfomuseum.geotag.init.js#": staticJavascriptSfomuseumGeotagInitJs,
	"static/javascript/catalog.js": staticJavascriptCatalogJs,
	"static/javascript/sfomuseum.geotag.init.js": staticJavascriptSfomuseumGeotagInitJs2,
	"static/javascript/sfomuseum.maps.js": staticJavascriptSfomuseumMapsJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"javascript": &bintree{nil, map[string]*bintree{
			"#sfomuseum.geotag.init.js#": &bintree{staticJavascriptSfomuseumGeotagInitJs, map[string]*bintree{}},
			"catalog.js": &bintree{staticJavascriptCatalogJs, map[string]*bintree{}},
			"sfomuseum.geotag.init.js": &bintree{staticJavascriptSfomuseumGeotagInitJs2, map[string]*bintree{}},
			"sfomuseum.maps.js": &bintree{staticJavascriptSfomuseumMapsJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
